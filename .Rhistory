View(df[df$title == "모가디슈"])
View(df[df$title == "모가디슈"],)
View(df[df$vtitle == "모가디슈"])
View(exam)
text<- NULL; vtitle<-NULL; vpoint<-NULL; vreview<-NULL; page=NULL
url<- "http://movie.naver.com/movie/point/af/list.nhn"
text <- read_html(url)
text
for (index in 1:10) {
# 영화제목
node <- html_node(text, paste0("#old_content > table > tbody > tr:nth-child(", index, ") > td.title > a.movie.color_b"))
title <- html_text(node)
vtitle[index] <- title
# 영화평점
node <- html_node(text, paste0("#old_content > table > tbody > tr:nth-child(", index,") > td.title > div > em"))
point <- html_text(node)
vpoint <- c(vpoint, point)
# 영화리뷰
node <- html_nodes(text, xpath=paste0('//*[@id="old_content"]/table/tbody/tr[', index,"]/td[2]/text()"))
node <- html_text(node, trim=TRUE)
print(node)
review = node[4] # 리뷰글이 생략된 경우에 대한 처리를 위해...
vreview <- append(vreview, review)
}
page <- data.frame(vtitle, vpoint, vreview)
View(page)
# [ 예제3 ]
# 단일 페이지(rvest 패키지 사용)
library(rvest)
text<- NULL; vtitle<-NULL; vpoint<-NULL; vreview<-NULL; page=NULL
url<- "http://movie.naver.com/movie/point/af/list.nhn"
text <- read_html(url)
text
for (index in 1:10) {
# 영화제목
node <- html_node(text, paste0("#old_content > table > tbody > tr:nth-child(", index, ") > td.title > a.movie.color_b"))
title <- html_text(node)
vtitle[index] <- title
# 영화평점
node <- html_node(text, paste0("#old_content > table > tbody > tr:nth-child(", index,") > td.title > div > em"))
point <- html_text(node)
vpoint <- c(vpoint, point)
# 영화리뷰
node <- html_nodes(text, xpath=paste0('//*[@id="old_content"]/table/tbody/tr[', index,"]/td[2]/text()"))
node <- html_text(node, trim=TRUE)
print(node)
review = node[4] # 리뷰글이 생략된 경우에 대한 처리를 위해...
vreview <- append(vreview, review)
}
page <- data.frame(vtitle, vpoint, vreview)
View(page)
View(df)
View(df$title =="모가디슈슈")
View(df$title =="모가디슈")
View(df[df$title =="모가디슈"])
View(df[df$title =="모가디슈"],)
df[df$title =="모가디슈"]
str(df)
summary(df)
df[df$point >= 5]
df[,2]
df[1,1]
df[1,]
df[point,]
df[title,]
df[df$title,]
df[1,]
df[1 == "모가디슈",]
df$title <- as.Date(df$title)
df$title <- as.character(df$title)
subset(df, title == "모가디슈")
View(df[df$title =="모가디슈"],)
movie_review <- read.csv("output/movie_reviews3.csv")
title <- movie_review$vtitle
point <- movie_review$vpoint
df <- data.frame(title, point)
str(df)
summary(df)
subset(df, title == "모가디슈")
View(df[df$title =="모가디슈"],)
movie_review <- read.csv("output/movie_reviews3.csv")
title <- movie_review$vtitle
point <- movie_review$vpoint
df <- data.frame(title, point)
str(df)
summary(df)
subset(df, title == "모가디슈")
head(df, 10)
# 박스플롯
(성적 <- read.table("data/성적.txt", header=TRUE));
summary(성적$국어)
boxplot(성적$국어, col="yellow",  ylim=c(0,10), xlab="국어", ylab="성적", family='dog')
barplot(df)
barplot(t(df))
barplot(df)
barplot(as.matrix(df))
barplot(t(as.matrix(df))
barplot(t(as.matrix(df)))
barplot(as.matrix(t(df)))
barplot(as.matrix(df)))
t(
barplot(as.matrix(df))
barplot(as.matrix(df))
(성적 <- read.table("data/성적.txt", header=TRUE))
plot(성적$학번, 성적$국어, main="성적그래프", xlab="학번", ylab="점수",  xlim=c(0, 11), ylim=c(0, 11))
favorite <- c('WINTER', 'SUMMER', 'SPRING', 'SUMMER', 'SUMMER',
'FALL', 'FALL', 'SUMMER', 'SPRING', 'SPRING')   # 자료 입력
favorite                            # favorite의 내용 출력
table(favorite)                     # 도수분포 계산
ds <- table(favorite)                      # 도수분포표 저장
ds
# 도수분포표 내용 확인
barplot(ds, main='favorite season')        # 막대그래프 작성
table(df)
v <- vector(point)
point <- movie_review$vpoint
point
# df <- data.frame(title, point)
v <- vector(point)
table(point)
barplot(table,)
table <- table(point)
barplot(table)
barplot(ds, main='favorite season',
col=rainbow(4))       # 레인보우 팔레트에서 4개의 색을 선택
# 그래프의 작성
barplot(ds, main='인구 추정')
barplot(ds, main='인구 추정',
col=c('green','blue','yellow'))
par(mfrow=c(1, 1), mar=c(5, 5, 5, 7))
barplot(ds, main='인구 추정',
col=c('green','blue','yellow'),
beside=TRUE,
legend.text=T,
args.legend = list(x='topright', bty='n', inset=c(-0.25,0)))
hist(dist,                    # data
main='Histogram for 제동거리',   # 제목
xlab ='제동거리',        # x축 레이블
ylab='빈도수',           # y축 레이블
border='blue',           # 막대 테두리색
col='green',             # 막대 색
las=2,                   # x축 글씨 방향(0~3)
breaks=5)                # 막대 개수 조절
head(cars)
dist <- cars[,2]              # 자동차 제동거리
dist
hist(dist,                    # data
main='Histogram for 제동거리',   # 제목
xlab ='제동거리',        # x축 레이블
ylab='빈도수',           # y축 레이블
border='blue',           # 막대 테두리색
col='green',             # 막대 색
las=2,                   # x축 글씨 방향(0~3)
breaks=5)                # 막대 개수 조절
hist(table)
table <- table(point)
hist(table)
movie_review <- read.csv("output/movie_reviews3.csv")
# title <- movie_review$vtitle
point <- movie_review$vpoint
table <- table(point)
hist(table)
hist(table, "영화 평점 히스토그램(auto)")
hist(table, main="영화 평점 히스토그램(auto)")
hist(t(table), main="영화 평점 히스토그램(auto)")
hist(table, main="영화 평점 히스토그램(auto)")
table <- table(point)
table
t(table)
hist(t(table), main="영화 평점 히스토그램(auto)")
hist(dist,                    # data
main='Histogram for 제동거리',   # 제목
xlab ='제동거리',        # x축 레이블
ylab='빈도수',           # y축 레이블
border='blue',           # 막대 테두리색
col='green',             # 막대 색
las=2,                   # x축 글씨 방향(0~3)
breaks=5)                # 막대 개수 조절
dist
# title <- movie_review$vtitle
point <- movie_review$vpoint
hist(point, main="영화 평점 히스토그램(auto)")
rainbow(10)
heat.colors(10)
topo.colors(10)
rainbow(10)
hist(point, main="영화 평점 히스토그램(auto)",
xlab="평점", ylab="평가지수", col=heat.colors(10))
hist(point, main="영화 평점 히스토그램(auto)", family="maple",
xlab="평점", ylab="평가지수", col=heat.colors(10))
axis(2, at=seq(-5, 15, 5), family="cat")
boxplot(data, axes=F)
axis(1, at=1:12, lab=names(data), family="maple") # x축 추가
axis(2, at=seq(-5, 15, 5), family="cat")
title("다양하게 폰트를 지정한 박스플롯", family="cat", cex.main=2)
data <- read.table("data/온도.txt", header=TRUE, sep=",")
head(data, n=5)
dim(data)
boxplot(data)
boxplot(data, las = 2)
boxplot(data, las = 2, at = c(1,2,3,4, 6,7,8,9, 11,12,13,14))
dist <- cars[,2]              # 자동차 제동거리
dist
hist(dist,                    # data
main='Histogram for 제동거리',   # 제목
xlab ='제동거리',        # x축 레이블
ylab='빈도수',           # y축 레이블
border='blue',           # 막대 테두리색
col='green',             # 막대 색
las=2,                   # x축 글씨 방향(0~3)
breaks=5)                # 막대 개수 조절
result <- hist(dist,                    # data
main='Histogram for 제동거리',    # 제목
breaks=5)                # 막대 개수 조절
result
freq <- result$counts                   # 구간별 빈도수 저장
names(freq) <- result$breaks[-1]        # 구간값을 이름으로 지정
freq                                    # 구간별 빈도수 출력
par(mfrow=c(2,2), mar=c(3,3,4,2))     # 화면 분할(2x2)
hist(iris$Sepal.Length,               # 그래프 1
main='Sepal.Length',
col='orange')
barplot(table(mtcars$cyl),            # 그래프 2
main='mtcars',
col=c('red','green','blue'))
barplot(table(mtcars$gear),           # 그래프 3
main='mtcars',
col=rainbow(3),               # 레인보우 팔레트 사용
horiz=TRUE)
pie(table(mtcars$cyl),                # 그래프 4
main='mtcars',
col=topo.colors(3),           # topo 팔레트 사용
radius=2)
par(mfrow=c(1,1), mar=c(5,4,4,2)+.1)  # 화면 분할 취소
par(mfrow = c(2,2), mar = c(6,6,3,3))
barplot(table(chickwts$feed), main = 'distribution by Feed Type',
horiz = T, las = 1, col = 'green')
hist(Orange$age, main = 'the age of orange',
breaks = 4, xlab = 'day', col = 'yellow', border = 'blue')
barplot(table(chickwts$feed), main = 'distribution by Feed Type',
las = 2, col = 'green')
hist(Orange$age, main = 'the age of orange',
breaks = 6, xlab = 'day', col = 'yellow', border = 'blue')
par(mfrow = c(1,1), mar = c(5,4,4,2)+.1)
favorite <- c('WINTER', 'SUMMER', 'SPRING', 'SUMMER', 'SUMMER',
'FALL', 'FALL', 'SUMMER', 'SPRING', 'SPRING')   # 자료 입력
ds <- table(favorite)                                         # 도수분포 계산
ds
pie(ds, main='선호 계절',                                     # 원그래프 작성
radius=1)
# 히스토그램
hist(성적$국어, main="성적분포-국어",
xlab="점수", breaks=5,
col = "lightblue", border = "pink", family='dog')
hist(성적$수학, main="성적분포-수학",
xlab="점수", col = "lightblue",
breaks=2, border = "pink")
hist(성적$국어, main="성적분포-국어",
xlab="점수", ylab="도수",
col=rainbow(12), border = "pink")
hist(성적$수학, main="성적분포-수학",
xlab="점수", col = "lightblue",
breaks=2, border = "pink")
hist(point, main="영화 평점 히스토그램(1~5,6~10)", family="maple",
xlab="평점", ylab="평가지수", col=c("skyblue","pink"), breaks=2)
hist(point, main="영화 평점 히스토그램(1~5,6~10)", family="maple",
xlab="평점", ylab="평가지수", col=c("magenda","pink"), breaks=2)
skyblu
hist(point, main="영화 평점 히스토그램(1~5,6~10)", family="maple",
xlab="평점", ylab="평가지수", col=c("skyblue","pink"), breaks=2)
hist(성적$국어, main="성적분포-국어",
xlab="점수", ylab="도수",
col=rainbow(12), border = "pink")
hist(nums, family='maple')
nums <- sample(1:100, 30)
hist(nums, family='maple')
hist(nums, breaks=c(0,10,20,30,40,50,60,70,80,90,100))
hist(nums, breaks=10)
hist(nums, breaks=c(0,50,100), probability = T)
hist(nums, breaks=c(0,50,100))
hist(nums, breaks=c(0,30,100))
hist(point, main="영화 평점 히스토그램(1~5,6,7,8,9,10)", family="maple",
xlab="평점", ylab="평가지수", col=c("skyblue","pink"), breaks=c(1,5,6,7,8,9,10))
hist(point, main="영화 평점 히스토그램(1~5,6~10)", family="maple",
xlab="평점", ylab="평가지수", col=c("skyblue","pink"), breaks=2)
hist(point, main="영화 평점 히스토그램(1~5,6,7,8,9,10)", family="maple",
xlab="평점", ylab="평가지수", col=c("skyblue","pink"), breaks=c(1,5,6,7,8,9,10))
hist(nums, breaks=c(0,33,66,100), freq=T)
hist(nums, breaks=c(0,33,66,100))
hist(point, main="영화 평점 히스토그램(1~5,6,7,8,9,10)", family="maple",
xlab="평점", ylab="평가지수", col=c("skyblue","pink"), breaks=c(1,5,6,7,8,9,10), freq=T)
국어<- c(4,7,6,8,5,5,9,10,4,10)
plot(국어)
plot(국어, type="o", col="blue", family="maple")
title(main="성적그래프", col.main="red", font.main=4, family="maple")
title(main="성적그래프", col.main="red", font.main=3)
plot(국어, type="o", col="blue")
lines(수학, type="o", pch=16, lty=2, col="red")
title(main="성적그래프", col.main="red", font.main=3)
title(main="성적그래프", col.main="red", font.main=4, family="maple")
hist(point, main="영화 평점 히스토그램(1~5,6,7,8,9,10)", family="maple", col.main="red"
xlab="평점", ylab="평가지수", col=c("skyblue","pink"), breaks=c(1,5,6,7,8,9,10), freq=T)
hist(point, main="영화 평점 히스토그램(auto)", family="maple",
xlab="평점", ylab="평가지수", col=heat.colors(10))
hist(point, main="영화 평점 히스토그램(1~5,6~10)", family="maple",
xlab="평점", ylab="평가지수", col=c("skyblue","pink"), breaks=2)
hist(point, main="영화 평점 히스토그램(1~5,6,7,8,9,10)", family="maple", col.main="red",
xlab="평점", ylab="평가지수", col=c("skyblue","pink"), breaks=c(1,5,6,7,8,9,10), freq=T)
# 문제3
one <- read.csv("data/one.csv")
one
data.frame(area, space)
# 문제3
one <- read.csv("data/one.csv")
area <- one$구별
space <- one$X1인가구
data.frame(area, space)
boxplot(df)
boxplot(as.matrix(df))
# 문제3
one <- read.csv("data/one.csv", header=TRUE, sep=",")
area <- one$구별
space <- one$X1인가구
df <- data.frame(area, space)
boxplot(df)
boxplot(one)
# 박스플롯
(성적 <- read.table("data/성적.txt", header=TRUE));
boxplot(성적$국어, col="yellow",  ylim=c(0,10), xlab="국어", ylab="성적", family='dog')
summary(성적$국어)
str(성적$국어어)
str(성적$국어)
class(one)
class(성적적)
class(성적)
class(성적$국어)
class(one$X1인가구)
class(one$동)
one
df <- data.frame(area, space)
df <- df[,c(1,3)]
class(성적2)
성적2 <- 성적[,3:5]
class(성적2)
성적2
df
table(df)
data <- read.table("data/온도.txt", header=TRUE, sep=",")
data
head(data, n=5)
t(df)
head(df)
dim(data)
dim(df)
head(data, n=5)
boxplot(data)
boxplot(data, las = 2)
boxplot(data)
boxplot(data, las = 2)
boxplot(data)
boxplot(data, las = 2)
boxplot(data)
boxplot(data, las = 2, at = c(1,2,3,4, 6,7,8,9, 11,12,13,14))
boxplot(data, axes=F)
axis(1, at=1:12, lab=names(data), family="maple") # x축 추가
axis(2, at=seq(-5, 15, 5), family="cat")
class(data)
head(data, n=5)
df <- data.frame(area, space)
head(df)
boxplot(one)
boxplot(data)
boxplot(data, las = 2)
boxplot(data, las = 2, at = c(1,2,3,4, 6,7,8,9, 11,12,13,14))
chtcols = rep(c("red","sienna","palevioletred1","royalblue2"), times=3)
chtcols
boxplot(data, las = 2, at = c(1,2,3,4, 6,7,8,9, 11,12,13,14), col=chtcols)
grid(col="gray", lty=2, lwd=1)
# old <- par(famliy="maple")
boxplot(data, family='maple')  # 안됨!! 다른 아이들은 다 되는데!!
old <- par(famliy="maple")
old <- par(family="maple")
boxplot(data, axes=F)
axis(1, at=1:12, lab=names(data), family="maple") # x축 추가
axis(2, at=seq(-5, 15, 5), family="cat")
title("다양하게 폰트를 지정한 박스플롯", family="cat", cex.main=2)
class(area)
area
t(one)
head(t(one))
head(t(one))
one
t(df)
class(t(df))
as.data.frame(t(df))
as.vector(t(df))
as.POSIXlt(product_click)
as.POSIXlt(product_click$V1)
head(product_click)
product_click$V1
product_click$V1
head(product_click$V1)
as.POSIXlt(product_click, function(x) x[1,])
?as.POSIXlt
as.POSIXlt(product_click[1])
product_click[1]
as.POSIXlt(product_click[1,1])
product_click[1,1]
'1996/07/10'
class('1996/07/10')
cat(a[1])
a[1]
a <- product_click[1,1]
a[1]
cat(a(1))
a(1)
as.vector(a)
# 문제1
v <- 1:10
v <- sample(1:26,10)
v
# 문제1
v <- 1:10
v
sapply(v, function(num) LETTERS[num])
as.vector(a)
class(a)
claas(as.vector(a))
class(as.vector(a))
seq(a)
rep(a)
class(rep(a))
# R 공부를 열심히 하자(day2)
v1 <- 10:14
v2 <- c(5,3,1,10,4)
seq(1, 10)
ls() # list
v4 <- c(10, 5, 7, 4, 15, 1)
v5 <- c(100, 200, 300, '사백')
rep(1, 100)
rep(1:3, 5)
rep(1:3, times=5) # 키워드 파라미터
rep(1:3, each=5)
LETTERS
letters
month.name
month.abb
pi
as.POSIXlt(product_click[1,1]$wday)
paste("I'm","Duli","!!") # sep=" "
"I'm","Duli","!!"
result <- paste0("I'm","Duli","!!")
substr(a, 1,4)
cat(year, mon, day, sep="-")
year <- substr(a, 1,4)
mon <- substr(a, 5,6)
day <- substr(a, 7,8)
cat(year, mon, day, sep="-")
b <- cat(year, mon, day, sep="-")
b$wday
weekdays(b)
str(ct)
str(lt)
ct<-Sys.time()
str(lt)
unclass(ct)
unclass(lt)
lt$mon+1
lt$hour
lt$year+1900
ct<-Sys.time()
lt<-as.POSIXlt(ct)
unclass(ct)
unclass(lt)
ct
as.POSIXlt(b)
as.POSIXlt.numeric(b)
as.POSIXlt(b)
b
year <- substr(a, 1,4)
mon <- substr(a, 5,6)
day <- substr(a, 7,8)
b <- cat(year, mon, day, sep="-")
#올해의 크리스마스 요일 2가지방법(요일명,숫자)
christmas2<-as.POSIXlt("2022-12-25")
christmas2
as.POSIXlt(b)
b
year <- substr(a, 1,4)
mon <- substr(a, 5,6)
day <- substr(a, 7,8)
b <- cat(year, mon, day, sep="-")
date <- as.POSIXlt(b)
(date <- as.POSIXlt(b))
b <- cat(year, mon, day, sep="-")
"2022-12-25"
b <- cat("\"", year, mon, day, sep="-")
b
as.numeric(b)
b <- cat(year, mon, day, sep="-")
b <- paste(year, mon, day, sep="-")
b
(date <- as.POSIXlt(b))
product_click <- read.table("data/product_click.log")
product_click
install.packages("dplyr")
library(dplyr) # detach("package:dplyr")
install.packages("ggplot2")
str(ggplot2::mpg)
head(ggplot2::mpg)
mpg <- as.data.frame(ggplot2::mpg)
head(mpg)
