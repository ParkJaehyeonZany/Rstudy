Sys.setlocale("LC_ALL","Korean") # 언어 다시 한글로
# 도수분포표 내용 확인
barplot(ds, main='favorite season')        # 막대그래프 작성
barplot(ds, main='favorite season',
col='blue')                   # 막대의 색 지정
barplot(ds, main='favorite season',
col=c('blue','red','green','yellow'))     # 막대의 색을 각각 지정
barplot(ds, main='favorite season',
col=rainbow(4))       # 레인보우 팔레트에서 4개의 색을 선택
barplot(ds, main='favorite season',
col='green',                           # 막대의 색을 지정
xlab='계절',                           # x축 설명
ylab='빈도수' )                        # y축 설명
barplot(ds, main='favorite season',
col='yellow',                          # 막대의 색을 지정
horiz=TRUE)                            # 세로 방향 출력
barplot(ds, main='favorite season',
col='green',                           # 막대의 색을 지정
xlab='계절',                           # x축 설명
ylab='빈도수' )                        # y축 설명
# 그래프의 작성
barplot(ds, main='인구 추정')
Sys.setlocale("LC_ALL","Korean") # 언어 다시 한글로
library("extrafont")
font_import()
library(ggplot2)
theme_set(theme_grey(base_family='휴먼옛체'))
barplot(ds, main='favorite season',
col='green',                           # 막대의 색을 지정
xlab='계절',                           # x축 설명
ylab='빈도수' )                        # y축 설명
font()
fonts()
library(showtaxt)
library(tidyverse)
library(showtaxt)
library(showtext)
showtext_auto()
install.packages("showtext")
library(showtext)
font_add_google('Nanum Gothic', family='NanumGothic')
showtext_auto()
fonts()
barplot(ds, main='favorite season',
col='green',                           # 막대의 색을 지정
xlab='계절',                           # x축 설명
ylab='빈도수' )                        # y축 설명
barplot(ds, main='favorite season',
col='green',                           # 막대의 색을 지정
xlab='계절',                           # x축 설명
ylab='빈도수' )                        # y축 설명
showtext_auto()
wordcloud2(words, fontFamily = "휴먼옛체")
library(wordcloud)
library(wordcloud2)
library(wordcloud)
windowsFonts(lett=windowsFont("휴먼옛체"))
windowsFonts(dog=windowsFont("THE개이득"))
wordcloud(words$keyword, words$freq)
wordcloud(words$keyword, words$freq,family="lett")
wordcloud(words$keyword, words$freq,family="dog")
wordcloud(words$keyword, words$freq,
min.freq = 2,
random.order = F,
rot.per = 0.5, scale = c(4, 1),
colors = rainbow(7))
wordcloud(words$keyword, words$freq,
min.freq = 2,
random.order = F,
rot.per = 0.5, scale = c(4, 1),
colors = rainbow(20), family="lett")
wordcloud2(words, fontFamily = "휴먼옛체")
wordcloud2(words,rotateRatio = 1)
wordcloud2(words,rotateRatio = 0.5)
wordcloud2(words,rotateRatio = 0)
wordcloud2(words,size=0.5,col="random-dark")
wordcloud2(words,size=0.7,col="random-light",backgroundColor = "black")
wordcloud2(data = demoFreq) # str(demoFreq)
wordcloud2(data = demoFreq, shape = 'diamond')
wordcloud2(data = demoFreq, shape = 'star')
wordcloud2(data = demoFreq, shape = 'cardioid')
wordcloud2(data = demoFreq, shape = 'triangle-forward')
wordcloud2(data = demoFreq, shape = 'triangle')
# 네이버 블로그 글 워드클라우드
library(XML)
library(httr)
searchUrl<- "https://openapi.naver.com/v1/search/blog.xml"
Client_ID <- "izGsqP2exeThwwEUVU3x"
Client_Secret <- "WrwbQ1l6ZI"
query <- URLencode("봄")
url <- paste0(searchUrl, "?query=", query, "&display=100")
doc <- GET(url, add_headers("Content_Type" = "application/xml",
"X-Naver-client-Id" = Client_ID, "X-naver-Client-Secret" = Client_Secret))
# 블로그 내용에 대한 리스트 만들기
doc2 <- xmlParse(doc, encoding="UTF-8")
spring <- xpathSApply(doc2, "//item/description", xmlValue)
spring <- gsub("</?b>", "", spring)
spring <- gsub("&[a-z];", "", spring)
spring
install.packages("tidyverse")
library(tidyverse)
# [ 예제3 ]
# 단일 페이지(rvest 패키지 사용)
library(rvest)
require(rvest)
repair_encoding(text)
guess_encoding(text)
SimplePos09("오늘 비가 내린다.") # 9가지 품사로 형태소 분석
library(KoNLP)
SimplePos09("오늘 비가 내린다.") # 9가지 품사로 형태소 분석
word_data <- readLines("data/애국가(가사).txt")
word_data
repair_encoding(readLines("data/애국가(가사).txt"), from = "UTF-8")
barplot(ds, main='favorite season',
col='green',                           # 막대의 색을 지정
xlab='계절',                           # x축 설명
ylab='빈도수' )                        # y축 설명
barplot(ds, main='인구 추정',
col=c('green','blue','yellow'))
library(extrafont)
font_import()
fonts()
library(ggplot2)
theme_set(theme_grey(base_family='휴먼옛체'))
word_data <- readLines("data/애국가(가사).txt")
word_data
favorite <- c('WINTER', 'SUMMER', 'SPRING', 'SUMMER', 'SUMMER',
'FALL', 'FALL', 'SUMMER', 'SPRING', 'SPRING')   # 자료 입력
favorite <- c('WINTER', 'SUMMER', 'SPRING', 'SUMMER', 'SUMMER',
'FALL', 'FALL', 'SUMMER', 'SPRING', 'SPRING')   # 자료 입력
favorite                            # favorite의 내용 출력
table(favorite)                     # 도수분포 계산
# 도수분포표 내용 확인
barplot(ds, main='favorite season')        # 막대그래프 작성
barplot(ds, main='favorite season',
col='blue')                   # 막대의 색 지정
barplot(ds, main='favorite season',
col=c('blue','red','green','yellow'))     # 막대의 색을 각각 지정
barplot(ds, main='favorite season',
col=rainbow(4))       # 레인보우 팔레트에서 4개의 색을 선택
barplot(ds, main='favorite season',
col='green',                           # 막대의 색을 지정
xlab='계절',                           # x축 설명
ylab='빈도수' )                        # y축 설명
barplot(ds, main='favorite season',
col='yellow',                          # 막대의 색을 지정
horiz=TRUE)                            # 세로 방향 출력
barplot(ds, main='favorite season',
col='yellow',                          # 막대의 색을 지정
names=c('FA','SP','SU','WI'))          # 그룹 이름을 바꾸어 출력
barplot(ds, main='favorite season',
col='green',                          # 막대의 색을 지정
las=2)                                # 그룹 이름을 수직 방향으로
age.A <- c(13709, 10974, 7979, 5000, 4250)
age.B <- c(17540, 29701, 36209, 33947, 24487)
age.C <- c(991, 2195, 5366, 12980, 19007)
ds <- rbind(age.A, age.B, age.C)
colnames(ds) <- c('1970','1990','2010','2030','2050')
ds
str(ds)
class(ds)
# 그래프의 작성
barplot(ds, main='인구 추정')
barplot(ds, main='인구 추정',
col=c('green','blue','yellow'),
beside=TRUE)
click <- read.table("data/product_click.log", header=TRUE)
table(click)
t(table(click))
barplot(as.matrix(click), main="세로바 그래프 실습", beside=T, ylab="클릭수", xlab="상품ID", col=terrain.colors(10), family="dog")
barplot(as.matrix(click), main="세로바 그래프 실습")
# 문제1 - 답안
product_click <- read.table("data/product_click.log", sep=" ", col.names=c("time", "product"))
head(product_click)
click_table <- table(product_click$product)
click_table
png(filename="output/clicklog1.png", height=500, width=700, bg)
png(filename="output/clicklog1.png", height=500, width=700, bg="white")
barplot(click_table, main="세로바 그래프 실습", col.main="red", col=terrian.colors(10),
xlab="상품ID", ylab="클릭수")
barplot(click_table, main="세로바 그래프 실습", col.main="red", col=terrian.colors(10),
xlab="상품ID", ylab="클릭수")
barplot(click_table, main="세로바 그래프 실습", col.main="red",
xlab="상품ID", ylab="클릭수")
dev.off()
barplot(click_table, main="세로바 그래프 실습", col.main="red", col=terrian.colors(10),
xlab="상품ID", ylab="클릭수")
dev.off()
# 문제1 - 답안
product_click <- read.table("data/product_click.log", sep=" ", col.names=c("time", "product"))
head(product_click)
click_table <- table(product_click$product)
barplot(click_table, main="세로바 그래프 실습", col.main="red", col=terrian.colors(10),
xlab="상품ID", ylab="클릭수")
barplot(click_table, main="세로바 그래프 실습", col.main="red",
xlab="상품ID", ylab="클릭수")
barplot(click_table, main="세로바 그래프 실습", col.main="red",
xlab="상품ID", ylab="클릭수", cex.axis=0.7)
barplot(click_table, main="세로바 그래프 실습", col.main="red",
xlab="상품ID", ylab="클릭수", cex.axis=0.7, cex.names=0.7)
barplot(click_table, main="세로바 그래프 실습", col.main="red",
xlab="상품ID", ylab="클릭수", cex.axis=0.7, cex.names=0.7, cex.lab=0.7)
barplot(click_table, main="세로바 그래프 실습", col.main="red",
xlab="상품ID", ylab="클릭수")
barplot(click_table, main="세로바 그래프 실습", col.main="red",
xlab="상품ID", ylab="클릭수", cex.axis=0.7)
barplot(click_table, main="세로바 그래프 실습", col.main="red",
xlab="상품ID", ylab="클릭수", cex.axis=0.7, cex.names=0.7)
barplot(click_table, main="세로바 그래프 실습", col.main="red",
xlab="상품ID", ylab="클릭수", cex.axis=0.7, cex.names=0.7, cex.lab=0.7)
barplot(click_table, main="세로바 그래프 실습", col.main="red",
xlab="상품ID", ylab="클릭수")
barplot(click_table, main="세로바 그래프 실습", col.main="red",
xlab="상품ID", ylab="클릭수", cex.axis=0.7)
barplot(click_table, main="세로바 그래프 실습", col.main="red",
xlab="상품ID", ylab="클릭수", cex.axis=0.7, cex.names=0.7)
barplot(click_table, main="세로바 그래프 실습", col.main="red",
xlab="상품ID", ylab="클릭수", cex.axis=0.7, cex.names=0.7, cex.lab=0.7)
terrain.colors(10)
barplot(click_table, main="세로바 그래프 실습", col.main="red", col=terrian.colors(10),
xlab="상품ID", ylab="클릭수", cex.axis=0.7, cex.names=0.7, cex.lab=0.7)
barplot(click_table, main="세로바 그래프 실습", col.main="red", col=terrian.colors(5),
xlab="상품ID", ylab="클릭수", cex.axis=0.7, cex.names=0.7, cex.lab=0.7)
pie(성적$국어, labels=paste(성적$성명, "-", 성적$국어),col=terrain.colors(10))
# 파이그래프
(성적 <- read.table("data/성적.txt", header=TRUE));
pie(성적$국어, labels=paste(성적$성명, "-", 성적$국어),col=terrain.colors(10))
barplot(click_table, main="세로바 그래프 실습", col.main="red", col=rainbow(10)
xlab="상품ID", ylab="클릭수", cex.axis=0.7, cex.names=0.7, cex.lab=0.7)
barplot(click_table, main="세로바 그래프 실습", col.main="red", col=rainbow(10),
xlab="상품ID", ylab="클릭수", cex.axis=0.7, cex.names=0.7, cex.lab=0.7)
png(filename="output/clicklog1.png", height=500, width=700, bg="white")
# 문제1
product_click <- read.table("data/product_click.log", sep=" ", col.names=c("time", "product"))
head(product_click)
# 문제 1-1
product_c <- read.table("data/product_click.log")
head(product_c)
clicklog1 <- barplot(product_table2, main="세로바 그래프 실습", xlab="상품ID",
ylab="클릭수", col=terrian.colors(10), col.main="red", family="dog")
# 문제 1-1
product_c <- read.table("data/product_click.log")
head(product_c)
product_table2 <- table(product_c[,2])
clicklog1 <- barplot(product_table2, main="세로바 그래프 실습", xlab="상품ID",
ylab="클릭수", col=terrian.colors(10), col.main="red", family="dog")
clicklog1 <- barplot(product_table2, main="세로바 그래프 실습", xlab="상품ID",
ylab="클릭수", col=rainbow(10), col.main="red", family="dog")
clicklog1
barplot(product_table2, main="세로바 그래프 실습", xlab="상품ID",
ylab="클릭수", col=rainbow(10), col.main="red", family="dog")
dev.off()
dev.off()
product_click <- read.table("data/product_click.log", sep=" ", col.names=c("time", "product"))
hour_click <- as.numeric(substr(product_click$time, 9, 10))
hour_table <- table(hour_click)
names(hour_table) <- paste0(names(hour_table), "~", as.numeric(names(hour_table))+1)
png(filename="output/clicklog2.png", height=500, width=700)
# 문제 1-1
product_c <- read.table("data/product_click.log")
head(product_c)
product_table2 <- table(product_c[,2])
barplot(product_table2, main="세로바 그래프 실습", xlab="상품ID",
ylab="클릭수", col=rainbow(10), col.main="red", family="dog")
barplot(product_table2, main="세로바 그래프 실습", xlab="상품ID",
ylab="클릭수", col=rainbow(10), col.main="red", family="dog")
# 문제1
product_click <- read.table("data/product_click.log", sep=" ", col.names=c("time", "product"))
head(product_click)
click_table <- table(product_click$product)
barplot(click_table, main="세로바 그래프 실습", col.main="red", col=rainbow(10),
xlab="상품ID", ylab="클릭수", cex.axis=0.7, cex.names=0.7, cex.lab=0.7)
png(filename="output/clicklog1.png", height=500, width=700, bg="white")
dev.off()
dev.off()
dev.off()
# 문제1
product_click <- read.table("data/product_click.log", sep=" ", col.names=c("time", "product"))
head(product_click)
click_table <- table(product_click$product)
barplot(click_table, main="세로바 그래프 실습", col.main="red", col=rainbow(10),
xlab="상품ID", ylab="클릭수", cex.axis=0.7, cex.names=0.7, cex.lab=0.7)
barplot(product_table2, main="세로바 그래프 실습", xlab="상품ID",
ylab="클릭수", col.main="red", family="dog")
# 문제 1-1
product_c <- read.table("data/product_click.log")
# 문제 1-1
product_c <- read.table("data/product_click.log")
colnames(product_c, c("time","product"))
head(product_c)
colnames(product_c, V1 <- "time"))
terrain.colors(10
terrain.colors(10)
terrain.colors(10)
barplot(click_table, main="세로바 그래프 실습", col.main="red", col=terrain.colors(10),
xlab="상품ID", ylab="클릭수", cex.axis=0.7, cex.names=0.7, cex.lab=0.7)
product_click <- read.table("data/product_click.log", sep=" ", col.names=c("time", "product"))
hour_click <- as.numeric(substr(product_click$time, 9, 10))
hour_click
hour_table <- table(hour_click)
hour_table
names(hour_table) <- paste0(names(hour_table), "~", as.numeric(names(hour_table))+1)
hour_table
pie(hour_table, main="파이그래프 실습", radius=1, col.main="blue", col=rainbow(20),
cex.axis=0.7, cex.names=0.7)
dev.off()
dev.off()
pie(hour_table, main="파이그래프 실습", radius=1, col.main="blue", col=rainbow(20),
cex.axis=0.7, cex.names=0.7, family="dog")
pie(hour_table, main="파이그래프 실습", radius=1, col.main="blue", col=rainbow(20),
cex.axis=0.7, cex.names=0.7, family="dog")
pie(hour_table, main="파이그래프 실습", radius=1, col.main="blue", col=rainbow(20),
cex.axis=0.7, cex.names=0.7)
dev.off()
pie(hour_table, main="파이그래프 실습", radius=1, col.main="blue", col=rainbow(20),
cex.axis=0.7, cex.names=0.7)
(grade <- read.table("data/성적.txt", header=TRUE))
dev.off()
grade_index<- grade[3:5]
grade$성명 <- c('길동', '둘리', '또치', '도우너', '희동', '듀크', '턱시', '토토로', '올라프', '우디')
row.names(grade_index) <- grade$성명
barplot(t(grade_index),
col=c('orange','skyblue','pink'),
family="dog")
row.names(grade_index) <- grade$성명
barplot(t(grade_index),
col=c('orange','skyblue','pink'),
family="dog")
title(main="학생별 점수", family="dog", col.main="orange")
legend(11,30, names(grade_index), cex=0.8, fill=c('orange','skyblue','pink'))
dev.off()
(grade <- read.table("data/성적.txt", header=TRUE))
grade_index<- grade[3:5]
grade$성명 <- c('길동', '둘리', '또치', '도우너', '희동', '듀크', '턱시', '토토로', '올라프', '우디')
row.names(grade_index) <- grade$성명
barplot(t(grade_index),
col=c('orange','skyblue','pink'),
family="dog")
library(showtext)
showtext_auto()
font_add(family = "cat", regular = "fonts/HoonWhitecatR.ttf")
font_add(family = "dog", regular = "fonts/THEdog.ttf")
font_add(family = "maple", regular = "fonts/MaplestoryBold.ttf")
row.names(grade_index) <- grade$성명
barplot(t(grade_index),
col=c('orange','skyblue','pink'),
family="dog")
title(main="학생별 점수", family="dog", col.main="orange")
legend(11,30, names(grade_index), cex=0.8, fill=c('orange','skyblue','pink'))
png(filename="output/clicklog3.png", height=500, width=700, bg="white")
# 문제1
product_click <- read.table("data/product_click.log", sep=" ", col.names=c("time", "product"))
head(product_click)
click_table <- table(product_click$product)
barplot(click_table, main="세로바 그래프 실습", col.main="red", col=terrain.colors(10),
xlab="상품ID", ylab="클릭수", cex.axis=0.7, cex.names=0.7, cex.lab=0.7)
png(filename="output/clicklog1.png", height=500, width=700, bg="white")
dev.off()
# 문제2
product_click <- read.table("data/product_click.log", sep=" ", col.names=c("time", "product"))
hour_click <- as.numeric(substr(product_click$time, 9, 10))
hour_table <- table(hour_click)
names(hour_table) <- paste0(names(hour_table), "~", as.numeric(names(hour_table))+1)
pie(hour_table, main="파이그래프 실습", radius=1, col.main="blue", col=rainbow(20),
cex.axis=0.7, cex.names=0.7)
png(filename="output/clicklog2.png", height=500, width=700, bg="white")
dev.off()
# 문제3
(grade <- read.table("data/성적.txt", header=TRUE))
grade_index<- grade[3:5]
grade$성명 <- c('길동', '둘리', '또치', '도우너', '희동', '듀크', '턱시', '토토로', '올라프', '우디')
row.names(grade_index) <- grade$성명
barplot(t(grade_index),
col=c('orange','skyblue','pink'),
family="dog")
title(main="학생별 점수", family="dog", col.main="orange")
legend(11,30, names(grade_index), cex=0.8, fill=c('orange','skyblue','pink'))
png(filename="output/clicklog3.png", height=500, width=700, bg="white")
dev.off()
dev.off()
# 문제1
product_click <- read.table("data/product_click.log", sep=" ", col.names=c("time", "product"))
head(product_click)
click_table <- table(product_click$product)
barplot(click_table, main="세로바 그래프 실습", col.main="red", col=terrain.colors(10),
xlab="상품ID", ylab="클릭수", cex.axis=0.7, cex.names=0.7, cex.lab=0.7)
png(filename="output/clicklog1.png", height=500, width=700, bg="white")
dev.off()
dev.off()
dev.off()
# 문제1
product_click <- read.table("data/product_click.log", sep=" ", col.names=c("time", "product"))
head(product_click)
click_table <- table(product_click$product)
barplot(click_table, main="세로바 그래프 실습", col.main="red", col=terrain.colors(10),
xlab="상품ID", ylab="클릭수", cex.axis=0.7, cex.names=0.7, cex.lab=0.7)
png(filename="output/clicklog1.png", height=500, width=700, bg="white")
# 문제1
product_click <- read.table("data/product_click.log", sep=" ", col.names=c("time", "product"))
head(product_click)
click_table <- table(product_click$product)
barplot(click_table, main="세로바 그래프 실습", col.main="red", col=terrain.colors(10),
xlab="상품ID", ylab="클릭수", cex.axis=0.7, cex.names=0.7, cex.lab=0.7)
png(filename="output/clicklog1.png", height=500, width=700, bg="white")
# 문제1
library(KoNLP)
movie <- read.csv("output/movie_reviews3.csv")
movie[[4]]
movie_gsub <- gsub("[[:punct:][:digit:]A-Za-zㄱ-ㅎㅏ-ㅣ]","", movie[[4]])
movie_gsub
movie_noun <- sapply(movie_gsub, extractNoun)
movie_table <- table(unlist(movie_noun))
movie_sort <- sort(movie_table, decreasing = T)
movie_top10_df <- data.frame(head(movie_sort, 10))
colnames(movie_top10_df) <- c("wname","wcount")
View(movie_top10_df)
write.csv(movie_top10_df, "output/movie_top_word.csv")
library(htmlwidgets)
library(wordcloud2)
book <- readLines("output/yes24.txt")
book_n <- extractNoun(book, autoSpacing = T)
book_gusb <- gsub("[^ㄱ-ㅎㅏ-ㅣ가-힣] ", "", unlist(book_n)) # 왜 unlist...?
undata <- Filter(function(x) {nchar(x) >= 2 & nchar(x) <= 4}, book_gusb)
book_table <- table(undata)
book_sort <- sort(book_table, decreasing = T)
book_df <- data.frame(book_sort)
book_wc <- wordcloud2(book_df, fontFamily = "휴먼옛체")
book_wc
htmltools::save_html(book_wc, "output/yest24.html")
dev.off()
dev.off()
dev.off()
product_click <- read.table("data/product_click.log", sep=" ", col.names=c("time", "product"))
head(product_click)
click_table <- table(product_click$product)
barplot(click_table, main="세로바 그래프 실습", col.main="red", col=terrain.colors(10),
xlab="상품ID", ylab="클릭수", cex.axis=0.7, cex.names=0.7, cex.lab=0.7)
png(filename="output/clicklog1.png", height=500, width=700, bg="white")
product_click <- read.table("data/product_click.log", sep=" ", col.names=c("time", "product"))
head(product_click)
click_table <- table(product_click$product)
png(filename="output/clicklog1.png", height=500, width=700, bg="white")
dev.off()
dev.off()
product_click <- read.table("data/product_click.log", sep=" ", col.names=c("time", "product"))
hour_click <- as.numeric(substr(product_click$time, 9, 10))
hour_table <- table(hour_click)
names(hour_table) <- paste0(names(hour_table), "~", as.numeric(names(hour_table))+1)
png(filename="output/clicklog2.png", height=500, width=700, bg="white")
pie(hour_table, main="파이그래프 실습", radius=1, col.main="blue", col=rainbow(20),
cex.axis=0.7, cex.names=0.7)
product_click <- read.table("data/product_click.log", sep=" ", col.names=c("time", "product"))
hour_click <- as.numeric(substr(product_click$time, 9, 10))
hour_table <- table(hour_click)
names(hour_table) <- paste0(names(hour_table), "~", as.numeric(names(hour_table))+1)
pie(hour_table, main="파이그래프 실습", radius=1, col.main="blue", col=rainbow(20),
cex.axis=0.7, cex.names=0.7)
png(filename="output/clicklog2.png", height=500, width=700, bg="white")
dev.off()
dev.off()
dev.off()
product_click <- read.table("data/product_click.log", sep=" ", col.names=c("time", "product"))
hour_click <- as.numeric(substr(product_click$time, 9, 10))
hour_table <- table(hour_click)
names(hour_table) <- paste0(names(hour_table), "~", as.numeric(names(hour_table))+1)
pie(hour_table, main="파이그래프 실습", radius=1, col.main="blue", col=rainbow(20),
cex.axis=0.7, cex.names=0.7)
png(filename="output/clicklog2.png", height=500, width=700, bg="white")
(grade <- read.table("data/성적.txt", header=TRUE))
grade_index<- grade[3:5]
grade$성명 <- c('길동', '둘리', '또치', '도우너', '희동', '듀크', '턱시', '토토로', '올라프', '우디')
row.names(grade_index) <- grade$성명
barplot(t(grade_index),
col=c('orange','skyblue','pink'),
family="dog")
title(main="학생별 점수", family="dog", col.main="orange")
legend(11,30, names(grade_index), cex=0.8, fill=c('orange','skyblue','pink'))
png(filename="output/clicklog3.png", height=500, width=700, bg="white")
dev.off()
dev.off()
row.names(grade_index) <- grade$성명
barplot(t(grade_index),
col=c('orange','skyblue','pink'),
family="dog")
dev.off()
dev.off()
row.names(grade_index) <- grade$성명
barplot(t(grade_index),
col=c('orange','skyblue','pink'),
family="dog")
title(main="학생별 점수", family="dog", col.main="orange")
legend(11,30, names(grade_index), cex=0.8, fill=c('orange','skyblue','pink'))
png(filename="output/clicklog3.png", height=500, width=700, bg="white")
# 문제3
font_add(family = "dog", regular = "fonts/THEdog.ttf")
library(showtext)
showtext_auto()
font_add(family = "dog", regular = "fonts/THEdog.ttf")
dev.off()
dev.off()
row.names(grade_index) <- grade$성명
barplot(t(grade_index),
col=c('orange','skyblue','pink'),
family="dog")
dev.off()
product_click <- read.table("data/product_click.log", sep=" ", col.names=c("time", "product"))
hour_click <- as.numeric(substr(product_click$time, 9, 10))
hour_table <- table(hour_click)
names(hour_table) <- paste0(names(hour_table), "~", as.numeric(names(hour_table))+1)
pie(hour_table, main="파이그래프 실습", radius=1, col.main="blue", col=rainbow(20),
cex.axis=0.7, cex.names=0.7)
png(filename="output/clicklog2.png", height=500, width=700, bg="white")
