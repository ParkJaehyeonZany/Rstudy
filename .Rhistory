showtext_auto()
wordcloud2(words, fontFamily = "휴먼옛체")
library(wordcloud)
library(wordcloud2)
library(wordcloud)
windowsFonts(lett=windowsFont("휴먼옛체"))
windowsFonts(dog=windowsFont("THE개이득"))
wordcloud(words$keyword, words$freq)
wordcloud(words$keyword, words$freq,family="lett")
wordcloud(words$keyword, words$freq,family="dog")
wordcloud(words$keyword, words$freq,
min.freq = 2,
random.order = F,
rot.per = 0.5, scale = c(4, 1),
colors = rainbow(7))
wordcloud(words$keyword, words$freq,
min.freq = 2,
random.order = F,
rot.per = 0.5, scale = c(4, 1),
colors = rainbow(20), family="lett")
wordcloud2(words, fontFamily = "휴먼옛체")
wordcloud2(words,rotateRatio = 1)
wordcloud2(words,rotateRatio = 0.5)
wordcloud2(words,rotateRatio = 0)
wordcloud2(words,size=0.5,col="random-dark")
wordcloud2(words,size=0.7,col="random-light",backgroundColor = "black")
wordcloud2(data = demoFreq) # str(demoFreq)
wordcloud2(data = demoFreq, shape = 'diamond')
wordcloud2(data = demoFreq, shape = 'star')
wordcloud2(data = demoFreq, shape = 'cardioid')
wordcloud2(data = demoFreq, shape = 'triangle-forward')
wordcloud2(data = demoFreq, shape = 'triangle')
# 네이버 블로그 글 워드클라우드
library(XML)
library(httr)
searchUrl<- "https://openapi.naver.com/v1/search/blog.xml"
Client_ID <- "izGsqP2exeThwwEUVU3x"
Client_Secret <- "WrwbQ1l6ZI"
query <- URLencode("봄")
url <- paste0(searchUrl, "?query=", query, "&display=100")
doc <- GET(url, add_headers("Content_Type" = "application/xml",
"X-Naver-client-Id" = Client_ID, "X-naver-Client-Secret" = Client_Secret))
# 블로그 내용에 대한 리스트 만들기
doc2 <- xmlParse(doc, encoding="UTF-8")
spring <- xpathSApply(doc2, "//item/description", xmlValue)
spring <- gsub("</?b>", "", spring)
spring <- gsub("&[a-z];", "", spring)
spring
install.packages("tidyverse")
library(tidyverse)
# [ 예제3 ]
# 단일 페이지(rvest 패키지 사용)
library(rvest)
require(rvest)
repair_encoding(text)
guess_encoding(text)
SimplePos09("오늘 비가 내린다.") # 9가지 품사로 형태소 분석
library(KoNLP)
SimplePos09("오늘 비가 내린다.") # 9가지 품사로 형태소 분석
word_data <- readLines("data/애국가(가사).txt")
word_data
repair_encoding(readLines("data/애국가(가사).txt"), from = "UTF-8")
barplot(ds, main='favorite season',
col='green',                           # 막대의 색을 지정
xlab='계절',                           # x축 설명
ylab='빈도수' )                        # y축 설명
barplot(ds, main='인구 추정',
col=c('green','blue','yellow'))
library(extrafont)
font_import()
fonts()
library(ggplot2)
theme_set(theme_grey(base_family='휴먼옛체'))
word_data <- readLines("data/애국가(가사).txt")
word_data
install.packages("showtext")
library(showtext)
showtext_auto()
font_add(family = "cat", regular = "fonts/HoonWhitecatR.ttf")
font_add(family = "dog", regular = "fonts/THEdog.ttf")
font_add(family = "maple", regular = "fonts/MaplestoryBold.ttf")
barplot(ds, main='favorite season',
col='green',                           # 막대의 색을 지정
xlab='계절',                           # x축 설명
ylab='빈도수' )                        # y축 설명
install.packages("dplyr")
library(dplyr) # detach("package:dplyr")
install.packages("ggplot2")
str(ggplot2::mpg)
head(ggplot2::mpg)
str(ggplot2::mpg)
mpg
head(ggplot2::mpg)
mpg <- as.data.frame(ggplot2::mpg)
head(mpg)
rm(mpg)
str(ggplot2::mpg)
head(ggplot2::mpg)
mpg <- as.data.frame(ggplot2::mpg)
head(mpg)
exam <- read.csv("data/csv_exam.csv")
str(exam)
dim(exam)
head(exam);tail(exam)
View(exam)
mpg %>%
group_by(manufacturer) %>%
filter(class=="suv") %>%
mutate(tdis= (cty+hwy)/2) %>%
summarise(mdis=mean(tdis)) %>%
arrange(desc(mdis)) %>%
head(5)
View(exam)
# [ filter() ]
# exam에서 class가 1인 경우만 추출하여 출력
filter(exam, class == 1) # dplyr을 로드하지 않고 수행하면 stats 패키지의 filter()가 수행됨
exam %>% filter(class == 1) # [참고] 단축키 [Ctrl+Shit+M]으로 %>% 기호 입력
# 2반인 경우만 추출
exam %>% filter(class == 2)
# 1반이 아닌 경우
exam %>% filter(class != 1)
# 3반이 아닌 경우
exam %>% filter(class != 3)
# 수학 점수가 50점을 초과한 경우
exam %>% filter(math > 50)
# 수학 점수가 50점 미만인 경우
exam %>% filter(math < 50)
# 영어점수가 80점 이상인 경우
exam %>% filter(english >= 80)
# 영어점수가 80점 이하인 경우
exam %>% filter(english <= 80)
# 목록에 해당되는 행 추출하기
exam %>% filter(class == 1 | class == 3 | class == 5)  # 1, 3, 5 반에 해당되면 추출
# %in% 연산자 이용하기
exam %>% filter(class %in% c(1,3,5))  # 1, 3, 5 반에 해당하면 추출
# 추출한 행으로 데이터 만들기
class1 <- exam %>% filter(class == 1)  # class가 1인 행 추출, class1에 할당
class2 <- exam %>% filter(class == 2)  # class가 2인 행 추출, class2에 할당
mean(class1$math)                      # 1반 수학 점수 평균 구하기
mean(class2$math)                      # 2반 수학 점수 평균 구하기
# 문제1
library(showtext)
showtext_auto()
font_add(family = "cat", regular = "fonts/HoonWhitecatR.ttf")
font_add(family = "dog", regular = "fonts/THEdog.ttf")
font_add(family = "maple", regular = "fonts/MaplestoryBold.ttf")
# 문제1
library(showtext)
product_click <- read.table("data/product_click.log", col.names=c("time","clickCount"))
#
a <- product_click[1,1]
year <- substr(a, 1,4)
mon <- substr(a, 5,6)
day <- substr(a, 7,8)
b <- paste(year, mon, day, sep="-")
b
(date <- as.POSIXlt(b))
time$wday
product_click <- read.table("data/product_click.log", col.names=c("time", "product"))
product_click
weekday_click <- as.POSIXlt(paste(substr(product_click$time, 1, 4),
substr(product_click$time, 5, 6),
substr(product_click$time, 7, 8),
sep="-"))$wday
weekday_click_table <- table(weekday_click)
weekday_click_table
time <- as.POSIXlt(b)$wady
time
weekday_click
weekday_click_table
product_click <- read.table("data/product_click.log", col.names=c("time","clickCount"))
weekday_click <- as.POSIXct(paste(substr(product_click$time, 1,4),
substr(product_click$time, 5,6),
substr(product_click$time, 7,8),
sep="-"))$wday
weekday_click <- as.POSIXlt(paste(substr(product_click$time, 1,4),
substr(product_click$time, 5,6),
substr(product_click$time, 7,8),
sep="-"))$wday
weekday_click_table <- table(weekday_click)
names(weekday_click_table) <- c("월요일","화요일","수요일","목요일","금요일","토요일")
par(mfrow=c(1,2))
plot(weekday_click_table,
main="요일별 클릭 수",
)
plot(weekday_click_table,
main="요일별 클릭 수",
ylim=c(0,300),
ylab="",
col="orange",
type="o",
pch=16,
family="cat")
plot(weekday_click_table,
main="요일별 클릭 수",
ylim=c(0,300),
ylab="",
col="orange",
type="o",
pch=16,
family="cat")
par(mfrow=c(1,1))
plot(weekday_click_table,
main="요일별 클릭 수",
ylim=c(0,300),
ylab="",
col="orange",
type="o",
pch=16,
family="cat",
)
plot(weekday_click_table,
main="요일별 클릭 수",
ylim=c(0,300),
ylab="",
col="orange",
type="o",
pch=16,
family="cat",
cex.axis=0.8,)
plot(weekday_click_table,
main="요일별 클릭 수",
ylim=c(0,300),
ylab="",
col="orange",
type="o",
pch=16,
family="cat",
cex.axis=0.8,
cex.main=2)
barplot(weekday_click_table,
main="요일별 클릭수",
)
barplot(weekday_click_table,
main="요일별 클릭수",
ylim=c(0,300),
)
barplot(weekday_click_table,
main="요일별 클릭수",
ylim=c(0,300),
col=topo.colors(6),
)
barplot(weekday_click_table,
main="요일별 클릭수",
ylim=c(0,300),
col=topo.colors(6),
pch=16)
barplot(weekday_click_table,
main="요일별 클릭수",
ylim=c(0,300),
col=topo.colors(6),
family="cat",
cex.axis=0.8,
cex.main=2)
par(mfrow=c(1,2))
plot(weekday_click_table,
main="요일별 클릭 수",
ylim=c(0,300),
ylab="",
col="orange",
type="o",
pch=16,
family="cat",
cex.axis=0.8,
cex.main=2)
barplot(weekday_click_table,
main="요일별 클릭수",
ylim=c(0,300),
col=topo.colors(6),
family="cat",
cex.axis=0.8,
cex.main=2)
dev.off()
movie_review <- read.csv("output/movie_reviews3.csv")
# title <- movie_review$vtitle
point <- movie_review$vpoint
movie_review <- read.csv("output/movie_reviews3.csv")
movie_review
movie_reviews <- read.csv("output/movie_reviews3.csv")
movie_reviews
movie_review <- read.csv("output/movie_reviews3.csv", header = TRUE, fileEncoding = "CP949", encoding = "UTF-8"))
movie_review <- read.csv("output/movie_reviews3.csv", header = TRUE, fileEncoding = "CP949", encoding = "UTF-8")
# title <- movie_review$vtitle
point <- movie_review$vpoint
hist(point, main="영화 평점 히스토그램(auto)", family="maple",
xlab="평점", ylab="평가지수", col=heat.colors(10))
hist(point, main="영화 평점 히스토그램(1~5,6~10)", family="maple",
xlab="평점", ylab="평가지수", col=c("skyblue","pink"), breaks=2)
hist(point, main="영화 평점 히스토그램(1~5,6,7,8,9,10)", family="maple", col.main="red",
xlab="평점", ylab="평가지수", col=c("skyblue","pink"), breaks=c(1,5,6,7,8,9,10), freq=T)
par(mfrow=c(1,3))
hist(point, main="영화 평점 히스토그램(auto)", family="maple",
xlab="평점", ylab="평가지수", col=heat.colors(10))
hist(point, main="영화 평점 히스토그램(1~5,6~10)", family="maple",
xlab="평점", ylab="평가지수", col=c("skyblue","pink"), breaks=2)
hist(point, main="영화 평점 히스토그램(1~5,6,7,8,9,10)", family="maple", col.main="red",
xlab="평점", ylab="평가지수", col=c("skyblue","pink"), breaks=c(1,5,6,7,8,9,10), freq=T)
dev.off()
hist(point, main="영화 평점 히스토그램(auto)", family="maple",
xlab="평점", ylab="평가지수", col=heat.colors(10))
hist(point, main="영화 평점 히스토그램(1~5,6~10)", family="maple",
xlab="평점", ylab="평가지수", col=c("skyblue","pink"), breaks=2)
hist(point, main="영화 평점 히스토그램(1~5,6,7,8,9,10)", family="maple", col.main="red",
xlab="평점", ylab="평가지수", col=c("skyblue","pink"), breaks=c(1,5,6,7,8,9,10), freq=T)
hist(point, main="영화 평점 히스토그램(1~5,6,7,8,9,10)", family="maple", col.main="red",
xlab="평점", ylab="평가지수", breaks=c(1,5,6,7,8,9,10), freq=T)
# 문제3
one <- read.csv("data/one.csv")
# 문제3
one <- read.csv("data/one.csv"header = TRUE, fileEncoding = "CP949", encoding = "UTF-8")
# 문제3
one <- read.csv("data/one.csv", header = TRUE, fileEncoding = "CP949", encoding = "UTF-8")
area <- one$구별
space <- one$X1인가구
df <- data.frame(area, space)
head(df)
head(one)
str(df)
str(one)
boxplot(space~area)
boxplot(space~area,
data=one)
boxplot(space~area)
boxplot(space~area,
data=one)
boxplot(space~area,
col=cm.colors(25),
)
boxplot(space~area,
col=cm.colors(25),
axes=F)
boxplot(space~area,
main="구별 1인가구",
col=cm.colors(25),
)
boxplot(space~area,
main="구별 1인가구",
col=cm.colors(25),
xlab=NULL)
boxplot(space~area,
main="구별 1인가구",
col=cm.colors(25),
xlab=NULL,
ylab=NULL,
las=2)
boxplot(space~area,
main="구별 1인가구",
col=cm.colors(25),
xlab=NULL,
ylab=NULL,
col.main="orange"
las=2)
boxplot(space~area,
main="구별 1인가구",
col=cm.colors(25),
xlab=NULL,
ylab=NULL,
col.main="orange",
family="maple"
las=2)
font_add(family = "maple", regular = "fonts/MaplestoryBold.ttf")
boxplot(space~area,
main="구별 1인가구",
col=cm.colors(25),
xlab=NULL,
ylab=NULL,
col.main="orange",
family="maple"
las=2)
boxplot(space~area,
main="구별 1인가구",
col=cm.colors(25),
xlab=NULL,
ylab=NULL,
col.main="orange",
family="maple"
las=2)
boxplot(space~area,
main="구별 1인가구",
col=cm.colors(25),
axes=F)
boxplot(space~area,
main="구별 1인가구",
col=cm.colors(25),
axes=F,
ann=F)
axis(1, at=seq(1,25))
axis(1, at=seq(1,25), lab=names(table(area)), family="maple", las=2)
axis(2, at=seq(0,10000,2000), family="maple", col.main="orange", cex.main=2)
axis(2, at=seq(0,10000,2000), family="maple", col.main="orange", cex.main=2, las=2)
boxplot(space~area,
main="구별 1인가구",
col=cm.colors(25),
axes=F,
ann=F)
axis(1, at=seq(1,25), lab=names(table(area)), family="maple", las=2)
axis(2, at=seq(0,10000,2000), family="maple", col.main="orange", cex.main=2, las=2)
title("구별 1인가구", col.main="orange", family="maple", cex.main=2)
product_click <- read.table("data/product_click.log", col.names=c("time","clickCount"))
# a <- product_click[1,1]
# year <- substr(a, 1,4)
# mon <- substr(a, 5,6)
# day <- substr(a, 7,8)
# b <- paste(year, mon, day, sep="-")
weekday_click <- as.POSIXlt(paste(substr(product_click$time, 1,4),
substr(product_click$time, 5,6),
substr(product_click$time, 7,8),
sep="-"))$wday
weekday_click_table <- table(weekday_click)
names(weekday_click_table) <- c("월요일","화요일","수요일","목요일","금요일","토요일")
png(filename="output/clicklog4.png", height=400, width=700, bg="white")
par(mfrow=c(1,2))
plot(weekday_click_table,
main="요일별 클릭 수",
ylim=c(0,300),
ylab="",
col="orange",
type="o",
pch=16,
family="cat",
cex.axis=0.8,
cex.main=2)
barplot(weekday_click_table,
main="요일별 클릭수",
ylim=c(0,300),
col=topo.colors(6),
family="cat",
cex.axis=0.8,
cex.main=2)
dev.off()
# 문제2
movie_review <- read.csv("output/movie_reviews3.csv", header = TRUE, fileEncoding = "CP949", encoding = "UTF-8")
# title <- movie_review$vtitle
point <- movie_review$vpoint
# df <- data.frame(title, point)
par(mfrow=c(1,3))
png(filename="output/clicklog5.png", height=400, width=1000, bg="white")
hist(point, main="영화 평점 히스토그램(auto)", family="maple",
xlab="평점", ylab="평가지수", col=heat.colors(10))
hist(point, main="영화 평점 히스토그램(1~5,6~10)", family="maple",
xlab="평점", ylab="평가지수", col=c("skyblue","pink"), breaks=2)
hist(point, main="영화 평점 히스토그램(1~5,6,7,8,9,10)", family="maple", col.main="red",
xlab="평점", ylab="평가지수", breaks=c(1,5,6,7,8,9,10), freq=T)
dev.off()
# 문제3
one <- read.csv("data/one.csv", header = TRUE, fileEncoding = "CP949", encoding = "UTF-8")
area <- one$구별
space <- one$X1인가구
df <- data.frame(area, space)
head(df)
png(filename="output/clicklog6.png", height=800, width=700, bg="white")
par(mfrow=c(1,1))
boxplot(space~area,
main="구별 1인가구",
col=cm.colors(25),
axes=F,
ann=F)
axis(1, at=seq(1,25), lab=names(table(area)), family="maple", las=2)
axis(2, at=seq(0,10000,2000), family="maple", col.main="orange", cex.main=2, las=2)
title("구별 1인가구", col.main="orange", family="maple", cex.main=2)
dev.off()
par(mfrow=c(1,3))
png(filename="output/clicklog5.png", height=400, width=1000, bg="white")
hist(point, main="영화 평점 히스토그램(auto)", family="maple",
xlab="평점", ylab="평가지수", col=heat.colors(10))
hist(point, main="영화 평점 히스토그램(1~5,6~10)", family="maple",
xlab="평점", ylab="평가지수", col=c("skyblue","pink"), breaks=2)
movie_review <- read.csv("output/movie_reviews3.csv", header = TRUE, fileEncoding = "CP949", encoding = "UTF-8")
# title <- movie_review$vtitle
point <- movie_review$vpoint
par(mfrow=c(1,3))
png(filename="output/clicklog5.png", height=400, width=1000, bg="white")
# 문제1
library(showtext)
showtext_auto()
font_add(family = "cat", regular = "fonts/HoonWhitecatR.ttf")
font_add(family = "dog", regular = "fonts/THEdog.ttf")
font_add(family = "maple", regular = "fonts/MaplestoryBold.ttf")
movie_review <- read.csv("output/movie_reviews3.csv", header = TRUE, fileEncoding = "CP949", encoding = "UTF-8")
# title <- movie_review$vtitle
point <- movie_review$vpoint
par(mfrow=c(1,3))
png(filename="output/clicklog5.png", height=400, width=1000, bg="white")
hist(point, main="영화 평점 히스토그램(auto)", family="maple",
xlab="평점", ylab="평가지수", col=heat.colors(10))
hist(point, main="영화 평점 히스토그램(1~5,6~10)", family="maple",
xlab="평점", ylab="평가지수", col=c("skyblue","pink"), breaks=2)
hist(point, main="영화 평점 히스토그램(1~5,6,7,8,9,10)", family="maple", col.main="red",
xlab="평점", ylab="평가지수", breaks=c(1,5,6,7,8,9,10), freq=T)
dev.off()
boxplot(space~area,
main="구별 1인가구",
col=cm.colors(25),
axes=F,
ann=F)
hist(point, main="영화 평점 히스토그램(auto)", family="maple",
xlab="평점", ylab="평가지수", col=heat.colors(10))
hist(point, main="영화 평점 히스토그램(1~5,6~10)", family="maple",
xlab="평점", ylab="평가지수", col=c("skyblue","pink"), breaks=2)
png(filename="output/clicklog5.png", height=400, width=1000, bg="white")
hist(point, main="영화 평점 히스토그램(auto)", family="maple",
xlab="평점", ylab="평가지수", col=heat.colors(10))
hist(point, main="영화 평점 히스토그램(1~5,6~10)", family="maple",
xlab="평점", ylab="평가지수", col=c("skyblue","pink"), breaks=2)
hist(point, main="영화 평점 히스토그램(1~5,6,7,8,9,10)", family="maple", col.main="red",
xlab="평점", ylab="평가지수", breaks=c(1,5,6,7,8,9,10), freq=T)
boxplot(space~area,
main="구별 1인가구",
col=cm.colors(25),
axes=F,
ann=F)
par(mfrow=c(1,1))
